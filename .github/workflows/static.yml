# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to deploy'
        required: true
        type: string

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write
  actions: read 

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: dev
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      # Step 2: Fetch latest workflow data and inject it into environment variables
      - name: Fetch deployment details
        id: fetch_data
        run: |
          LATEST_RUN=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          https://api.github.com/repos/${{ github.repository }}/actions/runs?per_page=1 | jq -r '.workflow_runs[0]')

          # Extract specific details
          COMMIT_SHA=$(echo $LATEST_RUN | jq -r '.head_sha' | cut -c1-7) # Shorten SHA
          COMMIT_MESSAGE=$(echo $LATEST_RUN | jq -r '.head_commit.message')
          COMMIT_AUTHOR=$(echo $LATEST_RUN | jq -r '.head_commit.author.name')
          COMMIT_DATE=$(echo $LATEST_RUN | jq -r '.head_commit.timestamp')
          BUILD_STATUS=$(echo $LATEST_RUN | jq -r '.conclusion')
          DEPLOY_TIME=$(date)
          
          # Set variables for replacement in index.html
          echo "COMMIT_SHA=$COMMIT_SHA" >> $GITHUB_ENV
          echo "COMMIT_MESSAGE=$COMMIT_MESSAGE" >> $GITHUB_ENV
          echo "COMMIT_AUTHOR=$COMMIT_AUTHOR" >> $GITHUB_ENV
          echo "COMMIT_DATE=$COMMIT_DATE" >> $GITHUB_ENV
          echo "BUILD_STATUS=$BUILD_STATUS" >> $GITHUB_ENV
          echo "DEPLOY_TIME=$DEPLOY_TIME" >> $GITHUB_ENV
          echo "TAG=${{ github.event.inputs.tag }}" >> $GITHUB_ENV

      # Step 3: Inject fetched data into index.html
      - name: Update index.html with deployment details
        run: |
          sed -i "s/{{ TAG }}/${{ env.TAG }}/g" index.html
          sed -i "s/{{ COMMIT_SHA }}/${{ env.COMMIT_SHA }}/g" index.html
          sed -i "s/{{ COMMIT_MESSAGE }}/${{ env.COMMIT_MESSAGE }}/g" index.html
          sed -i "s/{{ COMMIT_AUTHOR }}/${{ env.COMMIT_AUTHOR }}/g" index.html
          sed -i "s/{{ COMMIT_DATE }}/${{ env.COMMIT_DATE }}/g" index.html
          sed -i "s/{{ BUILD_STATUS }}/${{ env.BUILD_STATUS }}/g" index.html
          sed -i "s/{{ DEPLOY_TIME }}/${{ env.DEPLOY_TIME }}/g" index.html
      
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: '.'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
